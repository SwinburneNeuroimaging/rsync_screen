######################
# usage:
#       rsync_screen SOURCEDIR TARGETHOST:TARGETDIR 
#
# rsync_screen copy folders using rsync, with the transfer continuing in the background also in case of network disruption. 
# It also keeps the rsync log, and prints the exit status at the end
#
#######################

if [ $# -lt 2 ]
  then
    echo "Not enough arguments supplied"
fi

# get real paths and convert / to -
SOURCEDIR_DASH=$(realpath $1 | sed 's/\//-/g')
TARGETDIR_DASH=$(realpath $2 | sed 's/\//-/g')

# execute rsync within a screen command, with debug on, printing the exit code at the end and waiting for ENTER to continue. Everything is also logged to a logfile in the home directory that contains source and target dirs, as well as a unique date.

screen bash -vx -c '(rsync -avPxHS --no-g --chmod=Dg+s,a-w '$1' '$2'; echo "EXIT CODE: "${?}) 2>&1 | tee '${HOME}'/RSYNC_'${SOURCEDIR_DASH}'_TO_'${TARGETDIR_DASH}'_AT_'$(date -Iseconds)'.txt; read -p "Press enter to continue"'
